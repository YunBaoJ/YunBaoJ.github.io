{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "subtitle": "",
    "icon": "http://example.com/assets/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/05/02/%E6%B5%8B%E8%AF%95/",
            "url": "http://example.com/2023/05/02/%E6%B5%8B%E8%AF%95/",
            "title": "练习题与答案",
            "date_published": "2023-05-02T15:21:53.538Z",
            "content_html": "<p><ins>下划线</ins><br />\n<ins>波浪线</ins><ruby>.wavy}\n++ 着重点 ++{.dot}\n++ 紫色下划线 ++{.primary}\n++ 绿色波浪线 ++{.wavy .success}\n++ 黄色着重点 ++{.dot .warning}\n~~ 删除线～～\n~~ 红色删除线～～{.danger}\n== 荧光高亮 ==\n[赤橙黄绿青蓝紫]{.rainbow}\n[红色]{.red}\n[粉色]{.pink}\n[橙色]{.orange}\n[黄色]{.yellow}\n[绿色]{.green}\n[靛青]{.aqua}\n[蓝色]{.blue}\n[紫色]{.purple}\n[灰色]{.grey}\n快捷键 [Ctrl]{.kbd} + [C]{.kbd .red}\nH~2~0\n29<rp>(</rp><rt>th^\n隐藏文字\n!! 黑幕黑幕黑幕黑幕黑幕黑幕！！： 鼠标滑过显示内容\n!! 模糊模糊模糊模糊模糊模糊！！{.bulr</rt><rp>)</rp></ruby> ： 选中文字显示内容</p>\n<p>标签块<br />\n<span class=\"label\"> default</span><br />\n<span class=\"label primary\">primary</span><br />\n<span class=\"label info\">info</span><br />\n<span class=\"label success\">✔️success</span><br />\n<span class=\"label warning\">warning</span><br />\n<span class=\"label danger\">💔danger</span></p>\n<p>提醒块</p>\n<div class=\"note default\">\n<p>默认默认</p>\n</div>\n<div class=\"note primary\">\n<p>基本基本</p>\n</div>\n<div class=\"note info\">\n<p>提示提示</p>\n</div>\n<div class=\"note success\">\n<p>成功成功</p>\n</div>\n<div class=\"note warning\">\n<p>警告警告</p>\n</div>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<div class=\"note danger no-icon\">\n<p>危险危险</p>\n</div>\n<p>tab 标签卡</p>\n<div class=\"tab\" data-id=\"id1\" data-title=\"卡片 1\">\n<p>这里是卡片 1 的内容<br />\n ** 加粗 **<br />\n<span class=\"label success\">success</span></p>\n<p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"卡片 2\">\n<p>这里是卡片 2 的内容</p>\n<div class=\"note danger\">\n<p>危险危险</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片 1\">\n<p>这里是卡片 1 的内容</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"②号标签卡片 2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n<p>折叠块</p>\n<details><summary>默认默认 这里是一段文字</summary><div>\n<p>++ 下划线 ++</p>\n</div></details>\n<details class=\"primary\"><summary>紫色</summary><div>\n<div class=\"note info\">\n<p>参考信息</p>\n</div>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n</div></details>\n<details class=\"info\"><summary>蓝色</summary><div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片 1\">\n<p>这里是卡片 1 的内容</p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"卡片 2\">\n<p>这里是卡片 2 的内容</p>\n</div>\n</div></details>\n<details class=\"success\"><summary>绿色</summary><div>\n<p><div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div></p>\n</div></details>\n<details class=\"warning\"><summary>黄色</summary><div>\n<p>!! 警告警告警告警告警告！！{.bulr}<br />\n<span class=\"label success\">label</span></p>\n</div></details>\n<details class=\"danger\"><summary>红色</summary><div>\n<p><span class=\"label danger\">danger</span></p>\n</div></details>\n<ol>\n<li class=\"quiz true\">\n<p>编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。</p>\n</li>\n<li class=\"quiz multi\">\n<p>有基类  <code>SHAPE</code> ，派生类  <code>CIRCLE</code> ，声明如下变量： </p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SHAPE shape1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CIRCLE circle1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q1<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>下列哪些项是 “派生类对象替换基类对象”。</p>\n<ul class=\"options\">\n<li class=\"correct\"><code>p1=&amp;circle1;</code> </li>\n<li><code>q1=&amp;shape1;</code></li>\n<li class=\"correct\"><code>shape1=circle1;</code> </li>\n<li><code>circle1=shape1;</code></li>\n</ul>\n<blockquote>\n<ul class=\"options\">\n<li>✔️ 令基类对象的指针指向派生类对象</li>\n<li>❌ 派生类指针指向基类的引用</li>\n<li>✔️ 派生类对象给基类对象赋值</li>\n<li>❌ 基类对象给派生类对象赋值</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>下列叙述正确的是 <span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li>虚函数只能定义成无参函数</li>\n<li>虚函数不能有返回值</li>\n<li>能定义虚构造函数</li>\n<li class=\"correct\">A、B、C 都不对</li>\n</ul>\n</li>\n<li class=\"quiz fill\">\n<p>如果定义  <code>int e=8; double f=6.4, g=8.9;</code> ，则表达式  <code>f+int (e/3*int (f+g)/2)%4</code>  的值为 <span class=\"gap\">9.4</span>。</p>\n<blockquote>\n<p>注意运算顺序和数据类型<br />\n<span class=\"mistake\"> 8.4</span></p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/05/02/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/",
            "url": "http://example.com/2023/05/02/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/",
            "title": "第一篇博客",
            "date_published": "2023-05-02T15:13:00.000Z",
            "content_html": "<p>&lt;!-- <div class=\"links\"></div> --&gt;</p>\n<p><div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"霜月琉璃\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#9d5b8b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/05/02/sed/",
            "url": "http://example.com/2023/05/02/sed/",
            "title": "Linux之sed的使用方法",
            "date_published": "2023-05-02T15:05:25.917Z",
            "content_html": "<h3 id=\"行编辑器\"><a class=\"anchor\" href=\"#行编辑器\">#</a> 行编辑器</h3>\n<blockquote>\n<p>vi/vim 称为全文本编辑器，sed 和 awk 称为行编辑器</p>\n<ul>\n<li>交互式和非交互式</li>\n<li>文件操作模式和行操作模式</li>\n</ul>\n</blockquote>\n<h4 id=\"一-sed\"><a class=\"anchor\" href=\"#一-sed\">#</a> 一、sed</h4>\n<h5 id=\"1-sed的基本工作方式\"><a class=\"anchor\" href=\"#1-sed的基本工作方式\">#</a> 1. sed 的基本工作方式：</h5>\n<ul>\n<li>将文件以行为单位读取到内存中</li>\n<li>使用 sed 的每个命令对该行进行操作</li>\n<li>处理完成后输出该行</li>\n</ul>\n<h5 id=\"2-替换命令-s\"><a class=\"anchor\" href=\"#2-替换命令-s\">#</a> 2. 替换命令 s</h5>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/old/new/'</span> filepath</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s/old/new/'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s/old/new/'</span> filepath <span class=\"token comment\"># 多条指令使用参数 - e</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/old/new'</span> filepath <span class=\"token comment\"># 将替换的结果写回到原文件使用 - i</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/正则表达式/new/'</span> filepath <span class=\"token comment\"># 使用正则表达式使用</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'s/扩展正则表达式/new/'</span> filepath <span class=\"token comment\"># 使用扩展正则表达式使用 - r</span></pre></td></tr></table></figure><p>案例</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 准备一个实验文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">head</span> <span class=\"token parameter variable\">-5</span> /etc/passwd <span class=\"token operator\">></span> afile</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/root/chendong/'</span> afile</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s:/:~:'</span> afile <span class=\"token comment\"># 可以使用其他符号代替 / 做命令的分隔符</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s/x/aa/'</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'s/aa/bb/'</span> afile</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 上面命令可以简写为</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/x/aa/;s/aa/bb/'</span> afile</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/x/bb/'</span> afile</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/..//'</span> afile <span class=\"token comment\">#可以使用元字符，不写替换内容即为空</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/s*bin//'</span> afile</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'s/s+bin//'</span> afile</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/^root//'</span> afile</pre></td></tr></table></figure><h5 id=\"3-替换命令的更多选项\"><a class=\"anchor\" href=\"#3-替换命令的更多选项\">#</a> 3. 替换命令的更多选项</h5>\n<ul>\n<li>全局替换</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/old/new/g'</span> filepath <span class=\"token comment\"># 用于替换所有出现的地方</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 案例</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/root/!!!!/g'</span> afile</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'s/root/!!!!/2'</span> afile <span class=\"token comment\"># 替换匹配到的第 2 次</span></pre></td></tr></table></figure><ul>\n<li>寻址</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/正则表达式/s/old/new/g'</span> filepath <span class=\"token comment\"># 匹配了正则表达式的行才执行替换</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'行号s/old/new/g'</span> filepath <span class=\"token comment\"># 指定行号</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'行号1,行号2s/old/new/g'</span> filepath <span class=\"token comment\"># 指定从行号 1 到行号 2 的行</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 案例</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'1,3s/adm/!!!!/g'</span> afile</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'1,$s/adm/!!!!/g'</span> afile <span class=\"token comment\"># 指定从第 1 行到最后一行</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/^root/s/bash/!!!/'</span> afile <span class=\"token comment\"># 通过正则表达式匹配 root 开头的行</span></pre></td></tr></table></figure><h5 id=\"4-其他命令\"><a class=\"anchor\" href=\"#4-其他命令\">#</a> 4. 其他命令</h5>\n<ul>\n<li>删除\n<ul>\n<li>d 命令后的其他命令不会被执行</li>\n<li>不会更改原文件</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'[寻址]d'</span> filepath </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 案例</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/root/d'</span> afile <span class=\"token comment\"># 匹配到 root 行都删除</span></pre></td></tr></table></figure><ul>\n<li>追加、插入、更改</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/root/a hello'</span> afile <span class=\"token comment\"># a 在匹配的行的下一行插入指定内容</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/root/i hello'</span> afile <span class=\"token comment\"># i 在匹配的行的上一行插入指定内容</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token string\">'/root/c hello'</span> afile <span class=\"token comment\"># c 将匹配的行更改为指定内容</span></pre></td></tr></table></figure><h5 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h5>\n<h4 id=\"二-awk\"><a class=\"anchor\" href=\"#二-awk\">#</a> 二、awk</h4>\n<h5 id=\"1-awk流程控制\"><a class=\"anchor\" href=\"#1-awk流程控制\">#</a> 1. awk 流程控制</h5>\n<ul>\n<li>输入数据前 BEGIN {}</li>\n<li>主输入循环  {}</li>\n<li>所有文件读取完成 END {}</li>\n<li>不需要写所有流程</li>\n</ul>\n<h5 id=\"2-awk的字段\"><a class=\"anchor\" href=\"#2-awk的字段\">#</a> 2. awk 的字段</h5>\n<ul>\n<li>每行称为 awk 的记录</li>\n<li>使用空格、制表符分隔开的单词称作字段</li>\n<li>可以自己指定分隔的字段</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $1, $2, $3&#125;'</span> filepath <span class=\"token comment\"># $1, $2, $3 ... $n 表示每一个字段 \\t</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">':'</span> <span class=\"token string\">'&#123;print $1, $2, $3&#125;'</span> filepath <span class=\"token comment\"># 使用 - F 选项可以改变字段分隔符</span></pre></td></tr></table></figure><p>案例：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">\"'\"</span> <span class=\"token string\">'/^menu/&#123; print $2 &#125;'</span> /boot/grub2/grub.cfg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">\"'\"</span> <span class=\"token string\">'/^menu/&#123; print x++,$2 &#125;'</span> /boot/grub2/grub.cfg <span class=\"token comment\"># 输出行号</span></pre></td></tr></table></figure><h5 id=\"3-awk表达式\"><a class=\"anchor\" href=\"#3-awk表达式\">#</a> 3. awk 表达式</h5>\n<ul>\n<li>赋值操作符</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var1 <span class=\"token operator\">=</span> <span class=\"token string\">\"name\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>var2 <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span> <span class=\"token string\">\"world\"</span> <span class=\"token comment\"># 字符串连接</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>var3 <span class=\"token operator\">=</span> <span class=\"token variable\">$1</span> <span class=\"token comment\"># 第一个字段</span></pre></td></tr></table></figure><ul>\n<li>算数操作符</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>+ - * / % ^</pre></td></tr></table></figure><ul>\n<li>系统变量\n<ul>\n<li>FS 字段分隔符，OFS 输出字段分隔符</li>\n<li>RS 记录分隔符</li>\n<li>NR 行数</li>\n<li>NF 字段数量，最后一个字段内容可以使用 NF 取出</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'BEGIN&#123;FS=\":\"&#125;&#123;print $1&#125;'</span> afile <span class=\"token comment\"># 等同于 awk -F \":\" '&#123;print $1&#125;' afile</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'BEGIN&#123;RS=\":\"&#125;&#123;print $0&#125;'</span> afile</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print NR, $0&#125;'</span> afile </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print NF&#125;'</span> afile</pre></td></tr></table></figure><ul>\n<li>关系操作符</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span> <span class=\"token operator\">></span> <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">>=</span> <span class=\"token operator\">==</span> <span class=\"token operator\">!=</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 匹配字符、不匹配字符</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>~ <span class=\"token operator\">!</span>~</pre></td></tr></table></figure><ul>\n<li>布尔操作符</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span></pre></td></tr></table></figure><h5 id=\"4-判断和循环\"><a class=\"anchor\" href=\"#4-判断和循环\">#</a> 4. 判断和循环</h5>\n<ul>\n<li>条件语句</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  awk语句</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  awk语句<span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>案例：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 准备实验文件 scores.txt</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>user1 <span class=\"token number\">80</span> <span class=\"token number\">90</span> <span class=\"token number\">67</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>user2 <span class=\"token number\">60</span> <span class=\"token number\">67</span> <span class=\"token number\">90</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>user3 <span class=\"token number\">82</span> <span class=\"token number\">87</span> <span class=\"token number\">83</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>user4 <span class=\"token number\">100</span> <span class=\"token number\">75</span> <span class=\"token number\">68</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;if($2>=80) print $1&#125;'</span> scores.txt</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;if($2>=80) &#123;print $1; print $2&#125;&#125;'</span> scores.txt</pre></td></tr></table></figure><ul>\n<li>循环语句</li>\n</ul>\n<p>sum=0 ; for(i=2;i&lt;=NF;i++)  sum+=$i ; print sum</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>表达式<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  awk语句</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  awk语句</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>表达式<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>初始值<span class=\"token punctuation\">;</span>循环判断条件<span class=\"token punctuation\">;</span>累加<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  awk语句</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>同样也支持 break，continue</li>\n</ul>\n<p>案例：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;sum=0 ; for(i=2;i&lt;=NF;i++) sum+=$i ; print sum, sum/(NF-1) &#125;'</span> scores.txt</pre></td></tr></table></figure><h5 id=\"5-awk数组\"><a class=\"anchor\" href=\"#5-awk数组\">#</a> 5. awk 数组</h5>\n<ul>\n<li>数组的定义\n<ul>\n<li>下标可以使用字符串</li>\n</ul>\n</li>\n<li>数组的遍历</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;sum=0 ; for(i=2;i&lt;=NF;i++) sum+=$i ; avg[$1]=sum/(NF-1) &#125;END&#123;for(user in avg) sum2+=avg[user]; print sum2/NR&#125;'</span> scores.txt</pre></td></tr></table></figure><p>sum=0</p>\n<p>for(i=2;i&lt;=NF;i++)</p>\n<p>​      sum+=$i</p>\n<p>avg[$1]=sum/(NF-1)</p>\n<p>for(user in avg)</p>\n<p>​     sum2+=avg[user]</p>\n<p>print sum2/NR</p>\n",
            "tags": [
                "计算机科学",
                "Java",
                "零基础学Java语言-浙江大学-翁恺"
            ]
        },
        {
            "id": "http://example.com/2023/05/02/hello-world/",
            "url": "http://example.com/2023/05/02/hello-world/",
            "title": "Hello World",
            "date_published": "2023-05-02T14:34:31.463Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}